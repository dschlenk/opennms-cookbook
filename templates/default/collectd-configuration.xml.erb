<collectd-configuration xmlns="http://xmlns.opennms.org/xsd/config/collectd" threads=<%= @collectd_config.threads.to_s.encode(:xml => :attr) %>>
  <% @collectd_config.packages.each do |name, package| -%>
   <package name=<%= name.encode(:xml => :attr) %><%= package.remote.nil? ? '' : " remote=#{package.remote.to_s.encode(:xml => :attr)}" %>>
      <filter><%= package.filter.encode(:xml => :text) %></filter>
    <% unless package.specifics.nil? -%>
      <% package.specifics.each do |specific| -%>
      <specific><%= specific.encode(:xml => :text) %></specific>
      <% end -%>
    <% end -%>
    <% unless package.include_ranges.nil? -%>
      <% package.include_ranges.each do |include_range| -%>
      <include-range begin=<%= include_range['begin'].encode(:xml => :attr) %> end=<%= include_range['end'].encode(:xml => :attr) %> />
      <% end -%>
    <% end -%>
    <% unless package.exclude_ranges.nil? -%>
      <% package.exclude_ranges.each do |exclude_range| -%>
      <exclude-range begin=<%= exclude_range['begin'].encode(:xml => :attr) %> end=<%= exclude_range['end'].encode(:xml => :attr) %> />
      <% end -%>
    <% end -%>
    <% unless package.include_urls.nil? -%>
      <% package.include_urls.each do |include_url| -%>
      <include-url><%= include_url.encode(:xml => :text) %></include-url>
      <% end -%>
    <% end -%>
    <% unless package.store_by_if_alias.nil? -%>
      <storeByIfAlias><%= package.store_by_if_alias.to_s.encode(:xml => :text) %></storeByIfAlias>
    <% end -%>
    <% unless package.store_by_node_id.nil? -%>
      <storeByNodeID><%= package.store_by_node_id.to_s.encode(:xml => :text) %></storeByNodeID>
    <% end -%>
    <% unless package.if_alias_domain.nil? -%>
      <ifAliasDomain><%= package.if_alias_domain.encode(:xml => :text) %></ifAliasDomain>
    <% end -%>
    <% unless package.stor_flag_override.nil? -%>
      <storFlagOverride><%= package.stor_flag_override.to_s.encode(:xml => :text) %></storFlagOverride>
    <% end -%>
    <% unless package.if_alias_comment.nil? -%>
      <ifAliasComment><%= package.if_alias_comment.encode(:xml => :text) %></ifAliasComment>
    <% end -%>
    <% unless package.services.nil? -%>
      <% package.services.each do |service| -%>
      <service name=<%= service.service_name.encode(:xml => :attr) %> interval=<%= service.interval.to_s.encode(:xml => :attr) %><%= service.user_defined.nil? ? '' : " user-defined=#{service.user_defined.to_s.encode(:xml => :attr)}" %><%= service.status.nil? ? '' : " status=#{service.status.encode(:xml => :attr)}" %>>
        <% service.parameters.each do |k, v| -%>
         <parameter key=<%= k.encode(:xml => :attr) %> value="<%= v.to_s.gsub("&", "&amp;").gsub("\"", "&quot;").gsub("<", "&lt;") %>" />
        <% end -%>
      </service>
      <% end -%>
    <% end -%>
    <% unless package.outage_calendars.nil? || package.outage_calendars.empty? -%>
      <% package.outage_calendars.each do |oc| -%>
      <outage-calendar><%= oc.encode(:xml => :text) %></outage-calendar>
      <% end -%>
    <% end -%>
   </package>
  <% end -%>
  <% @collectd_config.collectors.each do |collector| -%>
   <collector service=<%= collector['service'].encode(:xml => :attr) %> class-name=<%= collector['class_name'].encode(:xml => :attr) %> <%= collector['parameters'].nil? || collector['parameters'].empty? ? '/' : '' %>>
    <% unless collector['parameters'].nil? || collector['parameters'].empty? -%>
      <% collector['parameters'].each do |k, v| -%>
     <parameter key=<%= k.encode(:xml => :attr) %> value="<%= v.to_s.gsub("&", "&amp;").gsub("\"", "&quot;").gsub("<", "&lt;") %>" />
      <% end -%>
   </collector>
    <% end -%>
  <% end -%>
</collectd-configuration>
